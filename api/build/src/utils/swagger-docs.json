{
  "openapi": "3.0.3",
  "info": {
    "title": "LostFound API - OpenAPI 3.0",
    "description": "This is the API for the LostFound App.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3001"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Estos endpoints manejan lo relacionado a los usuarios."
    },
    {
      "name": "Post",
      "description": "Estos endpoints manejan lo relacionado a las publicaciones."
    },
    {
      "name": "Subscription",
      "description": "Lo relacionado a las suscripciones para alertas de nuevas publicaciones"
    },
    {
      "name": "Countires",
      "description": "Endpoint que retorna un arreglo con la lista de todos los países permitidos."
    }
  ],
  "paths": {
    "/user/findAll": {
      "get": {
        "tags": ["User"],
        "summary": "For testing. Gets all the users",
        "description": "Just for testing! Finds all the users in the DB",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user/userInfo": {
      "get": {
        "tags": ["User"],
        "summary": "Get user info",
        "description": "Gets the user requesting info using the JWT sub",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/user/existsInDB": {
      "get": {
        "tags": ["User"],
        "summary": "Return true or false",
        "description": "Returns {msg: true / false} depending if the user exists in the DB or not.",
        "responses": {
          "200": {
            "description": "{msg: true / false}"
          }
        }
      }
    },
    "/user/update": {
      "patch": {
        "tags": ["User"],
        "summary": "Updated a user information",
        "description": "Updates a document in the User collection",
        "requestBody": {
          "description": "Request body to update the user data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Document updated"
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "tags": ["User"],
        "summary": "Create new user in the DB",
        "description": "This can only be done by the logged in user.",
        "operationId": "registerUser",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserBody"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/NewUserBody"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/NewUserBody"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/user/destroyAll/{user_id}": {
      "delete": {
        "tags": ["User"],
        "summary": "Deletes all user data",
        "description": "Deletes all the posts and the user document.",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "user _id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User borrado"
          }
        }
      }
    },
    "/post/newPost": {
      "post": {
        "tags": ["Post"],
        "summary": "Create a new Post",
        "description": "Crea un nuevo posteo",
        "operationId": "createPost",
        "requestBody": {
          "description": "Created post object???",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "exitosa operación",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          }
        }
      }
    },
    "/post/search": {
      "get": {
        "tags": ["Post"],
        "summary": "Find by query",
        "description": "Busca documentos filtrando por query",
        "operationId": "searchPosts",
        "parameters": [
          {
            "name": "pag",
            "in": "query",
            "description": "Número de página a visualizar",
            "example": 1,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lim",
            "in": "query",
            "description": "Cantidad de elementos máximos por página",
            "example": 6,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Orden 'asc' o 'desc' según createdAt",
            "example": "asc",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          }
        }
      }
    },
    "/post/{post_id}": {
      "get": {
        "tags": ["Post"],
        "summary": "Get Post document by id",
        "description": "Finds a document in the Post Collection, by _id.",
        "responses": {
          "200": {
            "description": "Returns the document found by id"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "example": "637ab9ca7cb69ef5afc0719d",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/post/{_id}": {
      "patch": {
        "tags": ["Post"],
        "summary": "Updates a Post document",
        "description": "Actualiza los datos de un documento Post",
        "responses": {
          "200": {
            "description": "Documento actualizado"
          }
        },
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "example": "637ab9ca7cb69ef5afc0719d",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated post data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePost"
              }
            }
          }
        }
      }
    },
    "/post/{postId}": {
      "delete": {
        "tags": ["Post"],
        "summary": "Delete a Post Document.",
        "description": "Deletes a document in the Post collection.",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "example": "637ab376c3c7feec35c8e0f9",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Documento borrado."
          }
        }
      }
    },
    "/post/contact/{post_id}": {
      "post": {
        "tags": ["Post"],
        "summary": "Contacta a ambos usuarios. El dueño del post_id y el que hace la request.",
        "description": "Envía un email a ambos usuarios, con los datos de contactos de ambas partes.",
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Request procesada. Chequee su email."
          }
        }
      }
    },
    "/post/findAll": {
      "get": {
        "tags": ["Post"],
        "summary": "Find all the posts in the DB",
        "description": "Gets all the documents in the collection Post.",
        "responses": {
          "200": {
            "description": "Returns all the documents from the Post collection."
          }
        }
      }
    },
    "/subscription/findAll": {
      "get": {
        "tags": ["Subscription"],
        "summary": "Get all docs from Subscription collection.",
        "description": "Finds all the documents from the Subscription collection.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/subscription": {
      "post": {
        "tags": ["Subscription"],
        "summary": "Create new subscription",
        "description": "Creates a new subscription",
        "requestBody": {
          "description": "The subscription body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewSubscriptionBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Subscription created."
          }
        }
      }
    },
    "/subscription/{subscription_id}": {
      "delete": {
        "tags": ["Subscription"],
        "summary": "Delete Subscription",
        "description": "Deletes a subscription document by _id",
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Documento borrado."
          }
        }
      }
    },
    "/subscription/{subs_id}": {
      "patch": {
        "tags": ["Subscription"],
        "summary": "Updates a Subscription document by id",
        "description": "Updates a subscription document that belongs to the user that makes the request",
        "parameters": [
          {
            "name": "subs_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document updated"
          }
        },
        "requestBody": {
          "description": "The subscription body with the new info to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubscriptionBody"
              }
            }
          }
        }
      }
    },
    "/subscription/userSubs": {
      "get": {
        "tags": ["Subscription"],
        "summary": "Get all the user subscription",
        "description": "Find in the db all the subscription that belogs to the user making the request",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/countries": {
      "get": {
        "tags": ["Countries"],
        "summary": "Gets countries.",
        "description": "Gets an array of all the countries",
        "parameters": [
          {
            "name": "lang",
            "in": "query",
            "description": "Idioma inglés(en) o español(es).",
            "example": "en",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "google932|klsd9393pakdj0032d"
          },
          "name": {
            "type": "string",
            "example": "John Connor"
          },
          "email": {
            "type": "string",
            "example": "john@skynet.com"
          },
          "profile_img": {
            "type": "string",
            "example": "https://images.com/icons/mifoto.jpg"
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "posts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Post"
            }
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NewSubscriptionBody"
            }
          }
        },
        "xml": {
          "name": "user"
        }
      },
      "NewUserBody": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "google932|klsd9393pakdj0032d"
          },
          "name": {
            "type": "string",
            "example": "John Connor"
          },
          "email": {
            "type": "string",
            "example": "john@skynet.com"
          },
          "profile_img": {
            "type": "string",
            "example": "https://images.com/icons/mifoto.jpg"
          }
        },
        "xml": {
          "name": "NewUserBody"
        }
      },
      "UpdateUserBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Juancho"
          },
          "profile_img": {
            "type": "string",
            "example": "https://www.pngall.com/wp-content/uploads/5/User-Profile-PNG-Image.png"
          }
        }
      },
      "Post": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "637ab9ca7cb69ef5afc0719d"
          },
          "name_on_doc": {
            "type": "string",
            "example": "John Connor"
          },
          "number_on_doc": {
            "type": "string",
            "example": "33532 12312AR"
          },
          "country_found": {
            "type": "string",
            "example": "ar"
          },
          "date_found": {
            "type": "string",
            "example": "2022-11-26T00:00:00.000Z"
          },
          "blurred_imgs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["https://cloudinary.com/uploaded_img/35423352ksa.jpg"]
          },
          "comments": {
            "type": "string",
            "example": "Encontré estos documentos tirados en la calle San Lorenzo al 1200 aproximadamente. Tiene dinero, y varias tarjetas más."
          },
          "user_posting": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "profile_img": {
                "type": "string"
              },
              "additional_contact_info": {
                "type": "string"
              }
            }
          }
        }
      },
      "UpdatePost": {
        "type": "object",
        "properties": {
          "name_on_doc": {
            "type": "string",
            "example": "John Connor"
          },
          "number_on_doc": {
            "type": "string",
            "example": "33532 12312-SKYNET"
          },
          "country_found": {
            "type": "string",
            "example": "us"
          },
          "date_found": {
            "type": "string",
            "example": "2022-11-26T00:00:00.000Z"
          },
          "blurred_imgs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": ["https://cloudinary.com/uploaded_img/35423352ksa.jpg"]
          },
          "comments": {
            "type": "string",
            "example": "The machines are taking over!!!!!!!!!!!!!"
          }
        }
      },
      "NewSubscriptionBody": {
        "type": "object",
        "properties": {
          "name_on_doc": {
            "type": "string",
            "example": "John Connor"
          },
          "number_on_doc": {
            "type": "string",
            "example": "33532 12312-SKYNET"
          },
          "country_lost": {
            "type": "string",
            "example": "us"
          },
          "date_lost": {
            "type": "string",
            "example": "2022-11-26T00:00:00.000Z"
          }
        }
      },
      "UpdateSubscriptionBody": {
        "type": "object",
        "properties": {
          "name_on_doc": {
            "type": "string",
            "example": "John Connor Griffin"
          },
          "number_on_doc": {
            "type": "string",
            "example": "33532 12312-SKYNET"
          },
          "country_lost": {
            "type": "string",
            "example": "us"
          },
          "date_lost": {
            "type": "string",
            "example": "2021-11-21T00:00:00.000Z"
          }
        }
      }
    }
  }
}
